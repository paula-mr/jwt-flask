{
	"info": {
		"_postman_id": "4c74d4a9-0bcf-42e8-8a2d-93e7d1a46aa1",
		"name": "jwt-flask",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Items",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						},
						"description": "Returns all items.\n"
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Returns an item with the specified name. If it doesn't exist it throws an error."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Deletes an item with the specified name. If it doesn't exist it throws an error."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 11.99,\n    \"store_id\": 1\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/item/chair3",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair3"
							]
						},
						"description": "Creates an item with the specified name. If it already exist it throws an error."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"chair\",\n    \"price\": 50.99\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Creates or updates if already exists an item with the specified name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{url}}/store/loja da paula",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"loja da paula"
							]
						},
						"description": "Creates an store with the specified name. If it already exist it throws an error."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/store/loja da paula",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"loja da paula"
							]
						},
						"description": "Returns an item with the specified name. If it doesn't exist it throws an error."
					},
					"response": []
				},
				{
					"name": "/stores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "Returns all items.\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d960506c-9c34-4644-85a2-c0e274e4acd7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"paula\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Authenticate user."
					},
					"response": []
				},
				{
					"name": "/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d960506c-9c34-4644-85a2-c0e274e4acd7",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"jwt_token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"paula\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Authenticate user."
					},
					"response": []
				},
				{
					"name": "/register",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d960506c-9c34-4644-85a2-c0e274e4acd7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"paula\",\n    \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Authenticate user."
					},
					"response": []
				},
				{
					"name": "/refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0231165-b3e6-4d1e-8cf8-eb9471de1604",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.environment.set(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/refresh",
							"host": [
								"{{url}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": "Register user."
					},
					"response": []
				},
				{
					"name": "/user/<user_id>",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/user/<user_id>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d960506c-9c34-4644-85a2-c0e274e4acd7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"logout"
							]
						},
						"description": "Authenticate user."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}